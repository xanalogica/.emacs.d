;;; Compiled snippets and support files for `python-mode'
;;; Snippet definitions:
;;;
(yas-define-snippets 'python-mode
                     '(("ZCML" "<configure\n  xmlns=\"http://namespaces.zope.org/zope\"\n  xmlns:browser=\"http://namespaces.zope.org/browser\"\n  xmlns:five=\"http://namespaces.zope.org/five\"\n  xmlns:i18n=\"http://namespaces.zope.org/i18n\"\n  i18n_domain=\"$1{tau.thoughtamps}\"\n  >\n\n  <!-- ######################################################################\n       # With the \"includeDependencies\" directive, you no longer have to add\n       # an explicit <include package=new.dependency> to your toplevel\n       # site.zcml file for every new dependency of this package.\n       #\n       # The \"includeDependencies\" directive, part of the z3c.autoinclude\n       # component, searches through the dependencies in your setup.py file\n       # (install_requires=), and includes the ZCML files in those packages\n       # that it finds.  Inclusion order matches the order in the setup.py\n       # file.\n       #\n       # You can pass a path for the package you want to include dependencies\n       # for, but typically you pass in the current package, as follows:\n       ###################################################################### -->\n\n       <includeDependencies package=\".\" />\n\n  <!-- ######################################################################\n       # Zope Configuration Markup Language for Wiring Components Together\n       ###################################################################### -->\n\n       $0\n\n</configure>\n" "Bare ZCMl Configuration File" nil
                        ("configuration")
                        ((yas/indent-line nil)
                         (yas/wrap-around-region 'cua))
                        "/home/jrush/.emacs.d/snippets/python-mode/zcml.yasnippet" nil nil)
                       ("while.yasnippet" "while ${condition}:\n    $0\n" "While-Loop" nil
                        ("statements")
                        ((yas/indent-line nil)
                         (yas/wrap-around-region 'cua))
                        "/home/jrush/.emacs.d/snippets/python-mode/while.yasnippet" nil nil)
                       (nil "try:\n    XXX`yas/selected-text`XXX$0\nexcept (${1:Exception}, ) as exc:\n    pass\nexcept:\n    pass\nfinally:\n    pass\n" "try ... except ..." nil
                            ("statements")
                            ((yas/indent-line 'auto)
                             (yas/wrap-around-region t))
                            "/home/jrush/.emacs.d/snippets/python-mode/try.yasnippet" "C-c C-t" nil)
                       ("pysetup" "import os\nfrom setuptools import setup\n\nsetup(\n    name='${1:your.thing}',\n    version='${2:0.1}',\n    license='${3:GPL}',\n    description='${4:one-line description}',\n    long_description='\\n'.join(\n        [\n            file(\"README.rst\").read(),\n            file(os.path.join(\"CHANGES.txt\")).read()\n        ]\n    ),\n    classifiers=[\n        #\"Development Status :: 1 - Planning\",\n        #\"Development Status :: 2 - Pre-Alpha\",\n        #\"Development Status :: 3 - Alpha\",\n        #\"Development Status :: 4 - Beta\",\n        #\"Development Status :: 5 - Production/Stable\",\n        #\"Development Status :: 6 - Mature\",\n        #\"Development Status :: 7 - Inactive\",\n\n        #\"Environment :: Console\",\n        #\"Environment :: Console :: Curses\",\n        #\"Environment :: Console :: Framebuffer\",\n        #\"Environment :: Console :: Newt\",\n        #\"Environment :: Console :: svgalib\",\n        #\"Environment :: Handhelds/PDA's\",\n        #\"Environment :: MacOS X\",\n        #\"Environment :: MacOS X :: Aqua\",\n        #\"Environment :: MacOS X :: Carbon\",\n        #\"Environment :: MacOS X :: Cocoa\",\n        #\"Environment :: No Input/Output (Daemon)\",\n        #\"Environment :: OpenStack\",\n        #\"Environment :: Other Environment\",\n        #\"Environment :: Plugins\",\n        #\"Environment :: Web Environment\",\n        #\"Environment :: Web Environment :: Buffet\",\n        #\"Environment :: Web Environment :: Mozilla\",\n        #\"Environment :: Web Environment :: ToscaWidgets\",\n        #\"Environment :: Win32 (MS Windows)\",\n        #\"Environment :: X11 Applications\",\n        #\"Environment :: X11 Applications :: Gnome\",\n        #\"Environment :: X11 Applications :: GTK\",\n        #\"Environment :: X11 Applications :: KDE\",\n        #\"Environment :: X11 Applications :: Qt\",\n\n        #\"Framework :: BFG\",\n        #\"Framework :: Bottle\",\n        #\"Framework :: Buildout\",\n        #\"Framework :: Buildout :: Extension\",\n        #\"Framework :: Buildout :: Recipe\",\n        #\"Framework :: Chandler\",\n        #\"Framework :: CherryPy\",\n        #\"Framework :: CubicWeb\",\n        #\"Framework :: Django\",\n        #\"Framework :: Flask\",\n        #\"Framework :: IDLE\",\n        #\"Framework :: Paste\",\n        #\"Framework :: Plone\",\n        #\"Framework :: Plone :: 3.2\",\n        #\"Framework :: Plone :: 3.3\",\n        #\"Framework :: Plone :: 4.0\",\n        #\"Framework :: Plone :: 4.1\",\n        #\"Framework :: Plone :: 4.2\",\n        #\"Framework :: Plone :: 4.3\",\n        #\"Framework :: Pylons\",\n        #\"Framework :: Pyramid\",\n        #\"Framework :: Setuptools Plugin\",\n        #\"Framework :: Trac\",\n        #\"Framework :: Tryton\",\n        #\"Framework :: TurboGears\",\n        #\"Framework :: TurboGears :: Applications\",\n        #\"Framework :: TurboGears :: Widgets\",\n        #\"Framework :: Twisted\",\n        #\"Framework :: ZODB\",\n        #\"Framework :: Zope2\",\n        #\"Framework :: Zope3\",\n\n        #\"Intended Audience :: Customer Service\",\n        #\"Intended Audience :: Developers\",\n        #\"Intended Audience :: Education\",\n        #\"Intended Audience :: End Users/Desktop\",\n        #\"Intended Audience :: Financial and Insurance Industry\",\n        #\"Intended Audience :: Healthcare Industry\",\n        #\"Intended Audience :: Information Technology\",\n        #\"Intended Audience :: Legal Industry\",\n        #\"Intended Audience :: Manufacturing\",\n        #\"Intended Audience :: Other Audience\",\n        #\"Intended Audience :: Religion\",\n        #\"Intended Audience :: Science/Research\",\n        #\"Intended Audience :: System Administrators\",\n        #\"Intended Audience :: Telecommunications Industry\",\n\n        #\"License :: Aladdin Free Public License (AFPL)\",\n        #\"License :: CC0 1.0 Universal (CC0 1.0) Public Domain Dedication\",\n        #\"License :: DFSG approved\",\n        #\"License :: Eiffel Forum License (EFL)\",\n        #\"License :: Free For Educational Use\",\n        #\"License :: Free For Home Use\",\n        #\"License :: Free for non-commercial use\",\n        #\"License :: Freely Distributable\",\n        #\"License :: Free To Use But Restricted\",\n        #\"License :: Freeware\",\n        #\"License :: Netscape Public License (NPL)\",\n        #\"License :: Nokia Open Source License (NOKOS)\",\n        #\"License :: OSI Approved\",\n        #\"License :: OSI Approved :: Academic Free License (AFL)\",\n        #\"License :: OSI Approved :: Apache Software License\",\n        #\"License :: OSI Approved :: Apple Public Source License\",\n        #\"License :: OSI Approved :: Artistic License\",\n        #\"License :: OSI Approved :: Attribution Assurance License\",\n        #\"License :: OSI Approved :: BSD License\",\n        #\"License :: OSI Approved :: Common Public License\",\n        #\"License :: OSI Approved :: Eiffel Forum License\",\n        #\"License :: OSI Approved :: European Union Public Licence 1.0 (EUPL 1.0)\",\n        #\"License :: OSI Approved :: European Union Public Licence 1.1 (EUPL 1.1)\",\n        #\"License :: OSI Approved :: GNU Affero General Public License v3\",\n        #\"License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)\",\n        #\"License :: OSI Approved :: GNU Free Documentation License (FDL)\",\n        #\"License :: OSI Approved :: GNU General Public License (GPL)\",\n        #\"License :: OSI Approved :: GNU General Public License v2 (GPLv2)\",\n        #\"License :: OSI Approved :: GNU General Public License v2 or later (GPLv2+)\",\n        #\"License :: OSI Approved :: GNU General Public License v3 (GPLv3)\",\n        #\"License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)\",\n        #\"License :: OSI Approved :: GNU Lesser General Public License v2 (LGPLv2)\",\n        #\"License :: OSI Approved :: GNU Lesser General Public License v2 or later (LGPLv2+)\",\n        #\"License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)\",\n        #\"License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)\",\n        #\"License :: OSI Approved :: GNU Library or Lesser General Public License (LGPL)\",\n        #\"License :: OSI Approved :: IBM Public License\",\n        #\"License :: OSI Approved :: Intel Open Source License\",\n        #\"License :: OSI Approved :: ISC License (ISCL)\",\n        #\"License :: OSI Approved :: Jabber Open Source License\",\n        #\"License :: OSI Approved :: MIT License\",\n        #\"License :: OSI Approved :: MITRE Collaborative Virtual Workspace License (CVW)\",\n        #\"License :: OSI Approved :: Motosoto License\",\n        #\"License :: OSI Approved :: Mozilla Public License 1.0 (MPL)\",\n        #\"License :: OSI Approved :: Mozilla Public License 1.1 (MPL 1.1)\",\n        #\"License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)\",\n        #\"License :: OSI Approved :: Nethack General Public License\",\n        #\"License :: OSI Approved :: Nokia Open Source License\",\n        #\"License :: OSI Approved :: Open Group Test Suite License\",\n        #\"License :: OSI Approved :: Python License (CNRI Python License)\",\n        #\"License :: OSI Approved :: Python Software Foundation License\",\n        #\"License :: OSI Approved :: Qt Public License (QPL)\",\n        #\"License :: OSI Approved :: Ricoh Source Code Public License\",\n        #\"License :: OSI Approved :: Sleepycat License\",\n        #\"License :: OSI Approved :: Sun Industry Standards Source License (SISSL)\",\n        #\"License :: OSI Approved :: Sun Public License\",\n        #\"License :: OSI Approved :: University of Illinois/NCSA Open Source License\",\n        #\"License :: OSI Approved :: Vovida Software License 1.0\",\n        #\"License :: OSI Approved :: W3C License\",\n        #\"License :: OSI Approved :: X.Net License\",\n        #\"License :: OSI Approved :: zlib/libpng License\",\n        #\"License :: OSI Approved :: Zope Public License\",\n        #\"License :: Other/Proprietary License\",\n        #\"License :: Public Domain\",\n        #\"License :: Repoze Public License\",\n\n        \"Natural Language :: English\",\n\n        #\"Operating System :: MacOS\",\n        #\"Operating System :: MacOS :: MacOS 9\",\n        #\"Operating System :: MacOS :: MacOS X\",\n        #\"Operating System :: Microsoft\",\n        #\"Operating System :: Microsoft :: MS-DOS\",\n        #\"Operating System :: Microsoft :: Windows\",\n        #\"Operating System :: Microsoft :: Windows :: Windows 3.1 or Earlier\",\n        #\"Operating System :: Microsoft :: Windows :: Windows 7\",\n        #\"Operating System :: Microsoft :: Windows :: Windows 95/98/2000\",\n        #\"Operating System :: Microsoft :: Windows :: Windows CE\",\n        #\"Operating System :: Microsoft :: Windows :: Windows NT/2000\",\n        #\"Operating System :: Microsoft :: Windows :: Windows Server 2003\",\n        #\"Operating System :: Microsoft :: Windows :: Windows Server 2008\",\n        #\"Operating System :: Microsoft :: Windows :: Windows Vista\",\n        #\"Operating System :: Microsoft :: Windows :: Windows XP\",\n        #\"Operating System :: OS Independent\",\n        #\"Operating System :: Other OS\",\n        #\"Operating System :: POSIX\",\n        #\"Operating System :: POSIX :: BSD\",\n        #\"Operating System :: POSIX :: BSD :: BSD/OS\",\n        #\"Operating System :: POSIX :: BSD :: FreeBSD\",\n        #\"Operating System :: POSIX :: BSD :: NetBSD\",\n        #\"Operating System :: POSIX :: BSD :: OpenBSD\",\n        #\"Operating System :: POSIX :: Linux\",\n        #\"Operating System :: POSIX :: Other\",\n        #\"Operating System :: Unix\",\n\n        #\"Programming Language :: Cython\",\n        #\"Programming Language :: JavaScript\",\n        #\"Programming Language :: Python\",\n        #\"Programming Language :: Python :: 2\",\n        #\"Programming Language :: Python :: 2.3\",\n        #\"Programming Language :: Python :: 2.4\",\n        #\"Programming Language :: Python :: 2.5\",\n        #\"Programming Language :: Python :: 2.6\",\n        #\"Programming Language :: Python :: 2.7\",\n        #\"Programming Language :: Python :: 2 :: Only\",\n        #\"Programming Language :: Python :: 3\",\n        #\"Programming Language :: Python :: 3.0\",\n        #\"Programming Language :: Python :: 3.1\",\n        #\"Programming Language :: Python :: 3.2\",\n        #\"Programming Language :: Python :: 3.3\",\n        #\"Programming Language :: Python :: Implementation\",\n        #\"Programming Language :: Python :: Implementation :: CPython\",\n        #\"Programming Language :: Python :: Implementation :: IronPython\",\n        #\"Programming Language :: Python :: Implementation :: Jython\",\n        #\"Programming Language :: Python :: Implementation :: PyPy\",\n        #\"Programming Language :: Python :: Implementation :: Stackless\",\n        #\"Programming Language :: SQL\",\n        #\"Programming Language :: Unix Shell\",\n        #\"Programming Language :: Zope\",\n\n        #\"Topic :: Communications\",\n        #\"Topic :: Communications :: BBS\",\n        #\"Topic :: Communications :: Chat\",\n        #\"Topic :: Communications :: Chat :: AOL Instant Messenger\",\n        #\"Topic :: Communications :: Chat :: ICQ\",\n        #\"Topic :: Communications :: Chat :: Internet Relay Chat\",\n        #\"Topic :: Communications :: Chat :: Unix Talk\",\n        #\"Topic :: Communications :: Conferencing\",\n        #\"Topic :: Communications :: Email\",\n        #\"Topic :: Communications :: Email :: Address Book\",\n        #\"Topic :: Communications :: Email :: Email Clients (MUA)\",\n        #\"Topic :: Communications :: Email :: Filters\",\n        #\"Topic :: Communications :: Email :: Mailing List Servers\",\n        #\"Topic :: Communications :: Email :: Mail Transport Agents\",\n        #\"Topic :: Communications :: Email :: Post-Office\",\n        #\"Topic :: Communications :: Email :: Post-Office :: IMAP\",\n        #\"Topic :: Communications :: Email :: Post-Office :: POP3\",\n        #\"Topic :: Communications :: Fax\",\n        #\"Topic :: Communications :: FIDO\",\n        #\"Topic :: Communications :: File Sharing\",\n        #\"Topic :: Communications :: File Sharing :: Gnutella\",\n        #\"Topic :: Communications :: File Sharing :: Napster\",\n        #\"Topic :: Communications :: Ham Radio\",\n        #\"Topic :: Communications :: Internet Phone\",\n        #\"Topic :: Communications :: Telephony\",\n        #\"Topic :: Communications :: Usenet News\",\n        #\"Topic :: Database\",\n        #\"Topic :: Database :: Database Engines/Servers\",\n        #\"Topic :: Database :: Front-Ends\",\n        #\"Topic :: Desktop Environment\",\n        #\"Topic :: Desktop Environment :: File Managers\",\n        #\"Topic :: Desktop Environment :: Gnome\",\n        #\"Topic :: Desktop Environment :: GNUstep\",\n        #\"Topic :: Desktop Environment :: K Desktop Environment (KDE)\",\n        #\"Topic :: Desktop Environment :: K Desktop Environment (KDE) :: Themes\",\n        #\"Topic :: Desktop Environment :: PicoGUI\",\n        #\"Topic :: Desktop Environment :: PicoGUI :: Applications\",\n        #\"Topic :: Desktop Environment :: PicoGUI :: Themes\",\n        #\"Topic :: Desktop Environment :: Screen Savers\",\n        #\"Topic :: Desktop Environment :: Window Managers\",\n        #\"Topic :: Desktop Environment :: Window Managers :: Afterstep\",\n        #\"Topic :: Desktop Environment :: Window Managers :: Afterstep :: Themes\",\n        #\"Topic :: Desktop Environment :: Window Managers :: Applets\",\n        #\"Topic :: Desktop Environment :: Window Managers :: Blackbox\",\n        #\"Topic :: Desktop Environment :: Window Managers :: Blackbox :: Themes\",\n        #\"Topic :: Desktop Environment :: Window Managers :: CTWM\",\n        #\"Topic :: Desktop Environment :: Window Managers :: CTWM :: Themes\",\n        #\"Topic :: Desktop Environment :: Window Managers :: Enlightenment\",\n        #\"Topic :: Desktop Environment :: Window Managers :: Enlightenment :: Epplets\",\n        #\"Topic :: Desktop Environment :: Window Managers :: Enlightenment :: Themes DR15\",\n        #\"Topic :: Desktop Environment :: Window Managers :: Enlightenment :: Themes DR16\",\n        #\"Topic :: Desktop Environment :: Window Managers :: Enlightenment :: Themes DR17\",\n        #\"Topic :: Desktop Environment :: Window Managers :: Fluxbox\",\n        #\"Topic :: Desktop Environment :: Window Managers :: Fluxbox :: Themes\",\n        #\"Topic :: Desktop Environment :: Window Managers :: FVWM\",\n        #\"Topic :: Desktop Environment :: Window Managers :: FVWM :: Themes\",\n        #\"Topic :: Desktop Environment :: Window Managers :: IceWM\",\n        #\"Topic :: Desktop Environment :: Window Managers :: IceWM :: Themes\",\n        #\"Topic :: Desktop Environment :: Window Managers :: MetaCity\",\n        #\"Topic :: Desktop Environment :: Window Managers :: MetaCity :: Themes\",\n        #\"Topic :: Desktop Environment :: Window Managers :: Oroborus\",\n        #\"Topic :: Desktop Environment :: Window Managers :: Oroborus :: Themes\",\n        #\"Topic :: Desktop Environment :: Window Managers :: Sawfish\",\n        #\"Topic :: Desktop Environment :: Window Managers :: Sawfish :: Themes 0.30\",\n        #\"Topic :: Desktop Environment :: Window Managers :: Sawfish :: Themes pre-0.30\",\n        #\"Topic :: Desktop Environment :: Window Managers :: Waimea\",\n        #\"Topic :: Desktop Environment :: Window Managers :: Waimea :: Themes\",\n        #\"Topic :: Desktop Environment :: Window Managers :: Window Maker\",\n        #\"Topic :: Desktop Environment :: Window Managers :: Window Maker :: Applets\",\n        #\"Topic :: Desktop Environment :: Window Managers :: Window Maker :: Themes\",\n        #\"Topic :: Desktop Environment :: Window Managers :: XFCE\",\n        #\"Topic :: Desktop Environment :: Window Managers :: XFCE :: Themes\",\n        #\"Topic :: Documentation\",\n        #\"Topic :: Education\",\n        #\"Topic :: Education :: Computer Aided Instruction (CAI)\",\n        #\"Topic :: Education :: Testing\",\n        #\"Topic :: Games/Entertainment\",\n        #\"Topic :: Games/Entertainment :: Arcade\",\n        #\"Topic :: Games/Entertainment :: Board Games\",\n        #\"Topic :: Games/Entertainment :: First Person Shooters\",\n        #\"Topic :: Games/Entertainment :: Fortune Cookies\",\n        #\"Topic :: Games/Entertainment :: Multi-User Dungeons (MUD)\",\n        #\"Topic :: Games/Entertainment :: Puzzle Games\",\n        #\"Topic :: Games/Entertainment :: Real Time Strategy\",\n        #\"Topic :: Games/Entertainment :: Role-Playing\",\n        #\"Topic :: Games/Entertainment :: Side-Scrolling/Arcade Games\",\n        #\"Topic :: Games/Entertainment :: Simulation\",\n        #\"Topic :: Games/Entertainment :: Turn Based Strategy\",\n        #\"Topic :: Home Automation\",\n        #\"Topic :: Internet\",\n        #\"Topic :: Internet :: File Transfer Protocol (FTP)\",\n        #\"Topic :: Internet :: Finger\",\n        #\"Topic :: Internet :: Log Analysis\",\n        #\"Topic :: Internet :: Name Service (DNS)\",\n        #\"Topic :: Internet :: Proxy Servers\",\n        #\"Topic :: Internet :: WAP\",\n        #\"Topic :: Internet :: WWW/HTTP\",\n        #\"Topic :: Internet :: WWW/HTTP :: Browsers\",\n        #\"Topic :: Internet :: WWW/HTTP :: Dynamic Content\",\n        #\"Topic :: Internet :: WWW/HTTP :: Dynamic Content :: CGI Tools/Libraries\",\n        #\"Topic :: Internet :: WWW/HTTP :: Dynamic Content :: Message Boards\",\n        #\"Topic :: Internet :: WWW/HTTP :: Dynamic Content :: News/Diary\",\n        #\"Topic :: Internet :: WWW/HTTP :: Dynamic Content :: Page Counters\",\n        #\"Topic :: Internet :: WWW/HTTP :: HTTP Servers\",\n        #\"Topic :: Internet :: WWW/HTTP :: Indexing/Search\",\n        #\"Topic :: Internet :: WWW/HTTP :: Session\",\n        #\"Topic :: Internet :: WWW/HTTP :: Site Management\",\n        #\"Topic :: Internet :: WWW/HTTP :: Site Management :: Link Checking\",\n        #\"Topic :: Internet :: WWW/HTTP :: WSGI\",\n        #\"Topic :: Internet :: WWW/HTTP :: WSGI :: Application\",\n        #\"Topic :: Internet :: WWW/HTTP :: WSGI :: Middleware\",\n        #\"Topic :: Internet :: WWW/HTTP :: WSGI :: Server\",\n        #\"Topic :: Internet :: Z39.50\",\n        #\"Topic :: Multimedia\",\n        #\"Topic :: Multimedia :: Graphics\",\n        #\"Topic :: Multimedia :: Graphics :: 3D Modeling\",\n        #\"Topic :: Multimedia :: Graphics :: 3D Rendering\",\n        #\"Topic :: Multimedia :: Graphics :: Capture\",\n        #\"Topic :: Multimedia :: Graphics :: Capture :: Digital Camera\",\n        #\"Topic :: Multimedia :: Graphics :: Capture :: Scanners\",\n        #\"Topic :: Multimedia :: Graphics :: Capture :: Screen Capture\",\n        #\"Topic :: Multimedia :: Graphics :: Editors\",\n        #\"Topic :: Multimedia :: Graphics :: Editors :: Raster-Based\",\n        #\"Topic :: Multimedia :: Graphics :: Editors :: Vector-Based\",\n        #\"Topic :: Multimedia :: Graphics :: Graphics Conversion\",\n        #\"Topic :: Multimedia :: Graphics :: Presentation\",\n        #\"Topic :: Multimedia :: Graphics :: Viewers\",\n        #\"Topic :: Multimedia :: Sound/Audio\",\n        #\"Topic :: Multimedia :: Sound/Audio :: Analysis\",\n        #\"Topic :: Multimedia :: Sound/Audio :: Capture/Recording\",\n        #\"Topic :: Multimedia :: Sound/Audio :: CD Audio\",\n        #\"Topic :: Multimedia :: Sound/Audio :: CD Audio :: CD Playing\",\n        #\"Topic :: Multimedia :: Sound/Audio :: CD Audio :: CD Ripping\",\n        #\"Topic :: Multimedia :: Sound/Audio :: CD Audio :: CD Writing\",\n        #\"Topic :: Multimedia :: Sound/Audio :: Conversion\",\n        #\"Topic :: Multimedia :: Sound/Audio :: Editors\",\n        #\"Topic :: Multimedia :: Sound/Audio :: MIDI\",\n        #\"Topic :: Multimedia :: Sound/Audio :: Mixers\",\n        #\"Topic :: Multimedia :: Sound/Audio :: Players\",\n        #\"Topic :: Multimedia :: Sound/Audio :: Players :: MP3\",\n        #\"Topic :: Multimedia :: Sound/Audio :: Sound Synthesis\",\n        #\"Topic :: Multimedia :: Sound/Audio :: Speech\",\n        #\"Topic :: Multimedia :: Video\",\n        #\"Topic :: Multimedia :: Video :: Capture\",\n        #\"Topic :: Multimedia :: Video :: Conversion\",\n        #\"Topic :: Multimedia :: Video :: Display\",\n        #\"Topic :: Multimedia :: Video :: Non-Linear Editor\",\n        #\"Topic :: Office/Business\",\n        #\"Topic :: Office/Business :: Financial\",\n        #\"Topic :: Office/Business :: Financial :: Accounting\",\n        #\"Topic :: Office/Business :: Financial :: Investment\",\n        #\"Topic :: Office/Business :: Financial :: Point-Of-Sale\",\n        #\"Topic :: Office/Business :: Financial :: Spreadsheet\",\n        #\"Topic :: Office/Business :: Groupware\",\n        #\"Topic :: Office/Business :: News/Diary\",\n        #\"Topic :: Office/Business :: Office Suites\",\n        #\"Topic :: Office/Business :: Scheduling\",\n        #\"Topic :: Other/Nonlisted Topic\",\n        #\"Topic :: Printing\",\n        #\"Topic :: Religion\",\n        #\"Topic :: Scientific/Engineering\",\n        #\"Topic :: Scientific/Engineering :: Artificial Intelligence\",\n        #\"Topic :: Scientific/Engineering :: Artificial Life\",\n        #\"Topic :: Scientific/Engineering :: Astronomy\",\n        #\"Topic :: Scientific/Engineering :: Atmospheric Science\",\n        #\"Topic :: Scientific/Engineering :: Bio-Informatics\",\n        #\"Topic :: Scientific/Engineering :: Chemistry\",\n        #\"Topic :: Scientific/Engineering :: Electronic Design Automation (EDA)\",\n        #\"Topic :: Scientific/Engineering :: GIS\",\n        #\"Topic :: Scientific/Engineering :: Human Machine Interfaces\",\n        #\"Topic :: Scientific/Engineering :: Image Recognition\",\n        #\"Topic :: Scientific/Engineering :: Information Analysis\",\n        #\"Topic :: Scientific/Engineering :: Interface Engine/Protocol Translator\",\n        #\"Topic :: Scientific/Engineering :: Mathematics\",\n        #\"Topic :: Scientific/Engineering :: Medical Science Apps.\",\n        #\"Topic :: Scientific/Engineering :: Physics\",\n        #\"Topic :: Scientific/Engineering :: Visualization\",\n        #\"Topic :: Security\",\n        #\"Topic :: Security :: Cryptography\",\n        #\"Topic :: Sociology\",\n        #\"Topic :: Sociology :: Genealogy\",\n        #\"Topic :: Sociology :: History\",\n        #\"Topic :: Software Development\",\n        #\"Topic :: Software Development :: Assemblers\",\n        #\"Topic :: Software Development :: Bug Tracking\",\n        #\"Topic :: Software Development :: Build Tools\",\n        #\"Topic :: Software Development :: Code Generators\",\n        #\"Topic :: Software Development :: Compilers\",\n        #\"Topic :: Software Development :: Debuggers\",\n        #\"Topic :: Software Development :: Disassemblers\",\n        #\"Topic :: Software Development :: Documentation\",\n        #\"Topic :: Software Development :: Embedded Systems\",\n        #\"Topic :: Software Development :: Internationalization\",\n        #\"Topic :: Software Development :: Interpreters\",\n        #\"Topic :: Software Development :: Libraries\",\n        #\"Topic :: Software Development :: Libraries :: Application Frameworks\",\n        #\"Topic :: Software Development :: Libraries :: Java Libraries\",\n        #\"Topic :: Software Development :: Libraries :: Perl Modules\",\n        #\"Topic :: Software Development :: Libraries :: PHP Classes\",\n        #\"Topic :: Software Development :: Libraries :: Pike Modules\",\n        #\"Topic :: Software Development :: Libraries :: pygame\",\n        #\"Topic :: Software Development :: Libraries :: Python Modules\",\n        #\"Topic :: Software Development :: Libraries :: Ruby Modules\",\n        #\"Topic :: Software Development :: Libraries :: Tcl Extensions\",\n        #\"Topic :: Software Development :: Localization\",\n        #\"Topic :: Software Development :: Object Brokering\",\n        #\"Topic :: Software Development :: Object Brokering :: CORBA\",\n        #\"Topic :: Software Development :: Pre-processors\",\n        #\"Topic :: Software Development :: Quality Assurance\",\n        #\"Topic :: Software Development :: Testing\",\n        #\"Topic :: Software Development :: Testing :: Traffic Generation\",\n        #\"Topic :: Software Development :: User Interfaces\",\n        #\"Topic :: Software Development :: Version Control\",\n        #\"Topic :: Software Development :: Version Control :: CVS\",\n        #\"Topic :: Software Development :: Version Control :: RCS\",\n        #\"Topic :: Software Development :: Version Control :: SCCS\",\n        #\"Topic :: Software Development :: Widget Sets\",\n        #\"Topic :: System\",\n        #\"Topic :: System :: Archiving\",\n        #\"Topic :: System :: Archiving :: Backup\",\n        #\"Topic :: System :: Archiving :: Compression\",\n        #\"Topic :: System :: Archiving :: Mirroring\",\n        #\"Topic :: System :: Archiving :: Packaging\",\n        #\"Topic :: System :: Benchmark\",\n        #\"Topic :: System :: Boot\",\n        #\"Topic :: System :: Boot :: Init\",\n        #\"Topic :: System :: Clustering\",\n        #\"Topic :: System :: Console Fonts\",\n        #\"Topic :: System :: Distributed Computing\",\n        #\"Topic :: System :: Emulators\",\n        #\"Topic :: System :: Filesystems\",\n        #\"Topic :: System :: Hardware\",\n        #\"Topic :: System :: Hardware :: Hardware Drivers\",\n        #\"Topic :: System :: Hardware :: Mainframes\",\n        #\"Topic :: System :: Hardware :: Symmetric Multi-processing\",\n        #\"Topic :: System :: Installation/Setup\",\n        #\"Topic :: System :: Logging\",\n        #\"Topic :: System :: Monitoring\",\n        #\"Topic :: System :: Networking\",\n        #\"Topic :: System :: Networking :: Firewalls\",\n        #\"Topic :: System :: Networking :: Monitoring\",\n        #\"Topic :: System :: Networking :: Monitoring :: Hardware Watchdog\",\n        #\"Topic :: System :: Networking :: Time Synchronization\",\n        #\"Topic :: System :: Operating System\",\n        #\"Topic :: System :: Operating System Kernels\",\n        #\"Topic :: System :: Operating System Kernels :: BSD\",\n        #\"Topic :: System :: Operating System Kernels :: GNU Hurd\",\n        #\"Topic :: System :: Operating System Kernels :: Linux\",\n        #\"Topic :: System :: Power (UPS)\",\n        #\"Topic :: System :: Recovery Tools\",\n        #\"Topic :: System :: Shells\",\n        #\"Topic :: System :: Software Distribution\",\n        #\"Topic :: System :: Systems Administration\",\n        #\"Topic :: System :: Systems Administration :: Authentication/Directory\",\n        #\"Topic :: System :: Systems Administration :: Authentication/Directory :: LDAP\",\n        #\"Topic :: System :: Systems Administration :: Authentication/Directory :: NIS\",\n        #\"Topic :: System :: System Shells\",\n        #\"Topic :: Terminals\",\n        #\"Topic :: Terminals :: Serial\",\n        #\"Topic :: Terminals :: Telnet\",\n        #\"Topic :: Terminals :: Terminal Emulators/X Terminals\",\n        #\"Topic :: Text Editors\",\n        #\"Topic :: Text Editors :: Documentation\",\n        #\"Topic :: Text Editors :: Emacs\",\n        #\"Topic :: Text Editors :: Integrated Development Environments (IDE)\",\n        #\"Topic :: Text Editors :: Text Processing\",\n        #\"Topic :: Text Editors :: Word Processors\",\n        #\"Topic :: Text Processing\",\n        #\"Topic :: Text Processing :: Filters\",\n        #\"Topic :: Text Processing :: Fonts\",\n        #\"Topic :: Text Processing :: General\",\n        #\"Topic :: Text Processing :: Indexing\",\n        #\"Topic :: Text Processing :: Linguistic\",\n        #\"Topic :: Text Processing :: Markup\",\n        #\"Topic :: Text Processing :: Markup :: HTML\",\n        #\"Topic :: Text Processing :: Markup :: LaTeX\",\n        #\"Topic :: Text Processing :: Markup :: SGML\",\n        #\"Topic :: Text Processing :: Markup :: VRML\",\n        #\"Topic :: Text Processing :: Markup :: XML\",\n        #\"Topic :: Utilities\",\n    ],\n    packages=['$1'],\n    namespace_packages=['$5'],\n    package_dir={'': '.'},\n    install_requires=[\n    ],\n\n    include_package_data=True,\n    zip_safe=False,\n    entry_points={\n        'console_scripts': [\n            # 'foo = my_package.some_module:main_func [PDF]',\n            # 'bar = other_module:some_func',\n        ],\n        'gui_scripts': [ # for Windows; generates a baz.exe and baz.py\n            # 'baz = my_package_gui.start_func',\n        ],\n    },\n)\n" "setup.py Skeleton" nil
                        ("codefrags")
                        ((yas/indent-line nil)
                         (yas/wrap-around-region 'cua))
                        "/home/jrush/.emacs.d/snippets/python-mode/setup.py.yasnippet" nil nil)
                       ("prop" "class ${2:SomeClass}(object):\n\n    _${1:propertyname} = ''\n\n    @property\n    def $1(self):\n        return self._$1\n\n    @$1.setter\n    def $1(self, value):\n        self._$1 = value\n\n    @$1.deleter\n    def $1(self):\n        del self._$1\n" "Property Descriptor" nil
                        ("codefrags")
                        ((yas/indent-line nil)
                         (yas/wrap-around-region 'cua))
                        "/home/jrush/.emacs.d/snippets/python-mode/prop.yasnippet" nil nil)
                       ("nspace" "# See http://peak.telecommunity.com/DevCenter/setuptools#namespace-packages\ntry:\n    __import__('pkg_resources').declare_namespace(__name__)\nexcept ImportError:\n    from pkgutil import extend_path\n    __path__ = extend_path(__path__, __name__)\n" "__init__ for a Python Namespace" nil
                        ("codefrags")
                        ((yas/indent-line nil)
                         (yas/wrap-around-region 'cua))
                        "/home/jrush/.emacs.d/snippets/python-mode/nspace.yasnippet" nil nil)
                       ("ZPL" "##############################################################################\n#\n# Copyright ${1:`(format-time-string \"%Y\")`} ${2:Zope Foundation and Contributors}.\n# All Rights Reserved.\n#\n# This software is subject to the provisions of the Zope Public License,\n# Version 2.1 (ZPL).  A copy of the ZPL should accompany this distribution.\n# THIS SOFTWARE IS PROVIDED \"AS IS\" AND ANY AND ALL EXPRESS OR IMPLIED\n# WARRANTIES ARE DISCLAIMED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n# WARRANTIES OF TITLE, MERCHANTABILITY, AGAINST INFRINGEMENT, AND FITNESS\n# FOR A PARTICULAR PURPOSE.\n#\n##############################################################################\n$0\n" "Zope Public License" nil
                        ("licenses")
                        nil "/home/jrush/.emacs.d/snippets/python-mode/license-zope.yasnippet" nil nil)
                       ("ZEL" "##############################################################################\n#\n# ZeOmega LLC license\n# Copyright ${1:`(format-time-string \"%Y\")`} ${2:ZeOmega Inc.}\n# http://www.zeomega.com\n# All rights reserved.\n#\n# $2 software [both binary and source (if released)] (hereafter,\n# Software) is intellectual property owned by $2 is copyright of\n# $2 in all countries in the world, and ownership remains with\n# $2  The Software is protected by the copyright laws of the United\n# States and international copyright treaties.  Licensee is not allowed to\n# distribute the binary and source code (if released) to third parties.\n# Licensee is not allowed to reverse engineer, disassemble or decompile code,\n# or make any modifications of the binary or source code, remove or alter any\n# trademark, logo, copyright or other proprietary notices, legends, symbols,\n# or labels in the Software.  Licensee is not allowed to sub-license the\n# Software or any derivative work based on or derived from the Software.\n# Neither the names of $2, nor the names of its contributors may be\n# used to endorse or promote products derived from this Software without\n# specific prior written permission.\n#\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n# CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n# WITH THE SOFTWARE.\n#\n##############################################################################\n$0\n" "ZeOmega Proprietary License" nil
                        ("licenses")
                        nil "/home/jrush/.emacs.d/snippets/python-mode/license-zeomega.yasnippet" nil nil)
                       ("GPL" "######################################################################\n#\n# Copyright ${1:`(format-time-string \"%Y\")`} ${2:Tau Productions Inc.}\n# All Rights Reserved.\n#\n# This file is part of ${3:project-name}.\n#\n# $3 is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or (at\n# your option) any later version.\n#\n# $3 is distributed in the hope that it will be useful, but\n# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n# for more details.\n#\n# You should have received a copy of the GNU General Public License along\n# with $3.  If not, see <http://www.gnu.org/licenses/>.\n#\n######################################################################\n$0" "Gnu Public License" nil
                        ("licenses")
                        nil "/home/jrush/.emacs.d/snippets/python-mode/license-gpl.yasnippet" nil nil)
                       ("itree" "import os\n\ndef walkpytree(rootdir, suffixes=None, recurse=False):\n\n    if suffixes is None:\n        suffixes = ('.py', )\n\n    for dirpath, dirnames, filenames in os.walk(rootdir, followsymlinks=True):\n\n        if '.svn' in dirnames:  # do not descend into .svn directories\n            dirnames.remove('.svn')\n\n        if '.git' in dirnames:  # do not descend into .git directories\n            dirnames.remove('.git')\n\n        for filename in filenames:\n\n            if suffixes is None or filename.endswith(suffixes):\n                full_filename = os.path.join(dirpath, filename)\n                yield full_filename\n\n        if not recurse:\n            break\n" "Iterate over a Directory Tree" nil
                        ("codefrags")
                        ((yas/indent-line nil)
                         (yas/wrap-around-region 'cua))
                        "/home/jrush/.emacs.d/snippets/python-mode/itertree.yasnippet" nil nil)
                       ("idir" "import os.path\n\nfrom fnmatch import fnmatch\n\ndirname = '.'\nfor filename in os.listdir(dirname):\n    fullname = os.path.join(dirname, filename)\n\n    if fnmatch(filename, '*.pdb'):\n        break\n\n    if os.path.isfile(fullname):\n        break\n" "Iterate over a Single Directory" nil
                        ("codefrags")
                        ((yas/indent-line nil)
                         (yas/wrap-around-region 'cua))
                        "/home/jrush/.emacs.d/snippets/python-mode/iterdir.yasnippet" nil nil)
                       ("iplace.yasnippet" "import sys\nimport fileinput\n\nfor line in fileinput.input(sys.argv[1:], inplace=1):\n\n    line = line.expandtabs()  # Expand Tabs\n    line = line.rstrip('\\r\\n \\t')  # Remove Trailing Whitespace\n    print line  # Convert Line-Endings into Native for the OS Platform\n" "Modifying Files In-Place" nil
                        ("codefrags")
                        ((yas/indent-line nil)
                         (yas/wrap-around-region 'cua))
                        "/home/jrush/.emacs.d/snippets/python-mode/iplace.yasnippet" nil nil)
                       ("ifmain.yasnippet" "if __name__ == '__main__':\n    ${1:main()}\n" "If-Main Conditional" nil
                        ("statements")
                        ((yas/indent-line nil)
                         (yas/wrap-around-region 'cua))
                        "/home/jrush/.emacs.d/snippets/python-mode/ifmain.yasnippet" nil nil)
                       ("for.yasnippet" "for ${var} in ${collection}:\n    `yas/selected-text`$0\n" "For-Loop" nil
                        ("statements")
                        ((yas/indent-line nil)
                         (yas/wrap-around-region t))
                        "/home/jrush/.emacs.d/snippets/python-mode/for.yasnippet" nil nil)
                       ("embed-python.yasnippet" "import code; code.interact(local=locals())\n" "Python Prompt" nil
                        ("embeddings")
                        ((yas/indent-line nil))
                        "/home/jrush/.emacs.d/snippets/python-mode/embed-python.yasnippet" nil nil)
                       ("embed-pdb.yasnippet" "import pdb; pdb.set_trace()\n" "Python Debugger Invocation" nil
                        ("embeddings")
                        ((yas/indent-line nil))
                        "/home/jrush/.emacs.d/snippets/python-mode/embed-pdb.yasnippet" nil nil)
                       ("embed-ipython.yasnippet" "import IPython; IPython.embed(local_ns=locals())\n" "IPython Prompt" nil
                        ("embeddings")
                        ((yas/indent-line nil))
                        "/home/jrush/.emacs.d/snippets/python-mode/embed-ipython.yasnippet" nil nil)
                       ("defm.yasnippet" "def ${1:name}(self, $2):\n    \"\"\"$3\n    ${2:$\n    (let* ((indent\n            (concat \"\\n\" (make-string (current-column) 32)))\n           (args\n            (mapconcat\n             '(lambda (x)\n                (if (not (string= (nth 0 x) \"\"))\n                    (concat \"- \" (char-to-string 96) (nth 0 x)\n                            (char-to-string 96) \":\")))\n             (mapcar\n              '(lambda (x)\n                 (mapcar\n                  '(lambda (x)\n                     (replace-regexp-in-string \"[[:blank:]]*$\" \"\"\n                      (replace-regexp-in-string \"^[[:blank:]]*\" \"\" x)))\n                  x))\n              (mapcar '(lambda (x) (split-string x \"=\"))\n                      (split-string text \",\")))\n             indent)))\n      (if (string= args \"\")\n          (make-string 3 34)\n        (mapconcat\n         'identity\n         (list \"\" \"Arguments:\" args (make-string 3 34))\n         indent)))\n    }\n`(when yas/selected-text yas/selected-text)` $0\n" "Method Definition" nil
                        ("statements")
                        ((yas/indent-line nil)
                         (yas/wrap-around-region 'cua))
                        "/home/jrush/.emacs.d/snippets/python-mode/defm.yasnippet" nil nil)
                       ("defi.yasnippet" "def __${1:init}__(self, $2):\n    \"\"\"$3\n    ${2:$\n    (let* ((indent\n            (concat \"\\n\" (make-string (current-column) 32)))\n           (args\n            (mapconcat\n             '(lambda (x)\n                (if (not (string= (nth 0 x) \"\"))\n                    (concat \"- \" (char-to-string 96) (nth 0 x)\n                            (char-to-string 96) \":\")))\n             (mapcar\n              '(lambda (x)\n                 (mapcar\n                  '(lambda (x)\n                     (replace-regexp-in-string \"[[:blank:]]*$\" \"\"\n                      (replace-regexp-in-string \"^[[:blank:]]*\" \"\" x)))\n                  x))\n              (mapcar '(lambda (x) (split-string x \"=\"))\n                      (split-string text \",\")))\n             indent)))\n      (if (string= args \"\")\n          (make-string 3 34)\n        (mapconcat\n         'identity\n         (list \"\" \"Arguments:\" args (make-string 3 34))\n         indent)))\n    }\n`(when yas/selected-text yas/selected-text)` $0\n" "def __init__(self, ...):" nil
                        ("statements")
                        ((yas/indent-line nil)
                         (yas/wrap-around-region 'cua))
                        "/home/jrush/.emacs.d/snippets/python-mode/defi.yasnippet" nil nil)
                       ("def.yasnippet" "def ${1:name}($2):\n    \"\"\"${3:}\n       ${2:$\n      (let*\n        ((indent\n            (concat \"\\n\" (make-string (current-column) 32)))\n           (args\n            (mapconcat\n             '(lambda (x)\n                (if (not (string= (nth 0 x) \"\"))\n                    (concat \"- \" (char-to-string 96) (nth 0 x)\n                            (char-to-string 96) \":\")))\n             (mapcar\n              '(lambda (x)\n                 (mapcar\n                  '(lambda (x)\n                     (replace-regexp-in-string \"[[:blank:]]*$\" \"\"\n                      (replace-regexp-in-string \"^[[:blank:]]*\" \"\" x)))\n                  x))\n              (mapcar '(lambda (x) (split-string x \"=\"))\n                      (split-string text \",\")))\n             indent)))\n      (if (string= args \"\")\n          (make-string 3 34)\n        (mapconcat\n         'identity\n         (list \"\" \"Arguments:\" args (make-string 3 34))\n         indent)))\n    }\n`(when yas/selected-text yas/selected-text)` $0\n" "Function Definition" nil
                        ("statements")
                        ((yas/indent-line nil)
                         (yas/wrap-around-region 'cua))
                        "/home/jrush/.emacs.d/snippets/python-mode/def.yasnippet" nil nil)
                       ("class.yasnippet" "class ${1:ClassName}(${2:object}):\n    \"\"\"$3\n    \"\"\"\n\n    def __init__(self, $4):\n        \"\"\"$5\n           ${4:$\n           (let* ((indent\n                   (concat \"\\n\" (make-string (current-column) 32)))\n                  (args\n                   (mapconcat\n                    '(lambda (x)\n                       (if (not (string= (nth 0 x) \"\"))\n                           (concat \"- \" (char-to-string 96) (nth 0 x)\n                                   (char-to-string 96) \":\")))\n                    (mapcar\n                     '(lambda (x)\n                        (mapcar\n                         (lambda (x)\n                           (replace-regexp-in-string \"[[:blank:]]*$\" \"\"\n                            (replace-regexp-in-string \"^[[:blank:]]*\" \"\" x))) x))\n                     (mapcar '(lambda (x) (split-string x \"=\"))\n                             (split-string text \",\")))\n                     indent)))\n              (if (string= args \"\")\n                  (make-string 3 34)\n                (mapconcat\n                 'identity\n                 (list \"\" \"Arguments:\" args (make-string 3 34))\n                 indent)))\n            }\n\n        ${4:$\n        (mapconcat\n         '(lambda (x)\n            (if (not (string= (nth 0 x) \"\"))\n                (concat \"self._\" (nth 0 x) \" = \" (nth 0 x))))\n         (mapcar\n          '(lambda (x)\n             (mapcar\n              '(lambda (x)\n                 (replace-regexp-in-string \"[[:blank:]]*$\" \"\"\n                  (replace-regexp-in-string \"^[[:blank:]]*\" \"\" x)))\n              x))\n          (mapcar '(lambda (x) (split-string x \"=\"))\n                  (split-string text \",\")))\n         (concat \"\\n\" (make-string (current-column) 32)))\n        }\n$0\n" "Class Definition" nil
                        ("statements")
                        ((yas/indent-line nil)
                         (yas/wrap-around-region 'cua))
                        "/home/jrush/.emacs.d/snippets/python-mode/class.yasnippet" nil nil)
                       ("args" "import os\n\nfrom optparse import OptionParser, Option, OptionValueError\n\ndef main():\n    usage = \"usage: %prog [options]\"\n    parser = OptionParser(usage=usage)\n\n    parser.add_option(\"-n\", \"--dry-run\",\n                      action=\"store_true\", dest=\"dry_run\", default=False,\n                      help=\"skip any changes to files, just report results\")\n\n    parser.add_option(\"-v\", \"--verbose\",\n                      action=\"store_true\", dest=\"verbose\", default=False,\n                      help=\"show details of problems, not just summary counts\")\n\n    parser.add_option(\"-s\", \"--suffix\",\n                      action=\"store\", dest=\"suffix\", default=\".py\",\n                      help=\"suffix of files to locate and process\")\n\n    global options\n    options, args = parser.parse_args()\n\n    topdir = os.getcwd()\n" "Args Parsing" nil
                        ("codefrags")
                        ((yas/indent-line nil)
                         (yas/wrap-around-region 'cua))
                        "/home/jrush/.emacs.d/snippets/python-mode/args.yasnippet" nil nil)
                       ("__.yasnippet" "__${init}__\n" "__...__" nil
                        ("statements")
                        ((yas/indent-line 'auto)
                         (yas/wrap-around-region t))
                        "/home/jrush/.emacs.d/snippets/python-mode/__.yasnippet" nil nil)))


;;; Do not edit! File generated at Thu Jun 21 18:34:10 2018
